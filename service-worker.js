try{self["workbox:core:5.0.0-alpha.2"]&&_()}catch(e){}const e={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:registration.scope},t=t=>[e.prefix,t,e.suffix].filter(e=>e&&e.length>0).join("-"),n={updateDetails:t=>{(t=>{for(const n of Object.keys(e))t(n)})(n=>{"string"==typeof t[n]&&(e[n]=t[n])})},getGoogleAnalyticsName:n=>n||t(e.googleAnalytics),getPrecacheName:n=>n||t(e.precache),getPrefix:()=>e.prefix,getRuntimeName:n=>n||t(e.runtime),getSuffix:()=>e.suffix},s=e=>{const t=new URL(String(e),location.href);return t.origin===location.origin?t.pathname:t.href},r=(e,...t)=>{let n=e;return t.length>0&&(n+=` :: ${JSON.stringify(t)}`),n};class i extends Error{constructor(e,t){super(r(e,t)),this.name=e,this.details=t}}const a=new Set;const c=(e,t)=>e.filter(e=>t in e),o=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:r=[]})=>{const i=await caches.open(e),a=await u({plugins:r,request:t,mode:"read"});let c=await i.match(a,s);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;c=await r.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:c,request:a})}return c},l=async({request:e,response:t,event:n,plugins:s=[]})=>{let r=t,i=!1;for(let t of s)if("cacheWillUpdate"in t){i=!0;const s=t.cacheWillUpdate;if(!(r=await s.call(t,{request:e,response:r,event:n})))break}return i||(r=r&&200===r.status?r:void 0),r||null},u=async({request:e,mode:t,plugins:n=[]})=>{const s=c(n,"cacheKeyWillBeUsed");let r=e;for(const e of s)"string"==typeof(r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}))&&(r=new Request(r));return r},h={put:async({cacheName:e,request:t,response:n,event:r,plugins:h=[],matchOptions:f})=>{const d=await u({plugins:h,request:t,mode:"write"});if(!n)throw new i("cache-put-with-no-response",{url:s(d.url)});let w=await l({event:r,plugins:h,response:n,request:d});if(!w)return;const p=await caches.open(e),g=c(h,"cacheDidUpdate");let y=g.length>0?await o({cacheName:e,matchOptions:f,request:d}):null;try{await p.put(d,w)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of a)await e()}(),e}for(let t of g)await t.cacheDidUpdate.call(t,{cacheName:e,event:r,oldResponse:y,newResponse:w,request:d})},match:o},f={fetch:async({request:e,fetchOptions:t,event:n,plugins:s=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const r=c(s,"fetchDidFail"),a=r.length>0?e.clone():null;try{for(let t of s)if("requestWillFetch"in t){const s=t.requestWillFetch,r=e.clone();e=await s.call(t,{request:r,event:n})}}catch(e){throw new i("plugin-error-request-will-fetch",{thrownError:e})}let o=e.clone();try{let i;i="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of s)"fetchDidSucceed"in e&&(i=await e.fetchDidSucceed.call(e,{event:n,request:o,response:i}));return i}catch(e){for(const t of r)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:a.clone(),request:o.clone()});throw e}}};try{self["workbox:precaching:5.0.0-alpha.2"]&&_()}catch(e){}const d="__WB_REVISION__";function w(e){if(!e)throw new i("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new i("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(n,location.href),r=new URL(n,location.href);return s.searchParams.set(d,t),{cacheKey:s.href,url:r.href}}class p{constructor(e){this.t=n.getPrecacheName(e),this.s=new Map,this.i=new Map}addToCacheList(e){for(const t of e){const{cacheKey:e,url:n}=w(t);if(this.s.has(n)&&this.s.get(n)!==e)throw new i("add-to-cache-list-conflicting-entries",{firstEntry:this.s.get(n),secondEntry:e});if("string"!=typeof t&&t.integrity){if(this.i.has(e)&&this.i.get(e)!==t.integrity)throw new i("add-to-cache-list-conflicting-integrities",{url:n});this.i.set(e,t.integrity)}this.s.set(n,e)}}async install({event:e,plugins:t}={}){const n=[],s=[],r=await caches.open(this.t),i=await r.keys(),a=new Set(i.map(e=>e.url));for(const e of this.s.values())a.has(e)?s.push(e):n.push(e);const c=n.map(n=>{const s=this.i.get(n);return this.o({event:e,plugins:t,url:n,integrity:s})});return await Promise.all(c),{updatedURLs:n,notUpdatedURLs:s}}async activate(){const e=await caches.open(this.t),t=await e.keys(),n=new Set(this.s.values()),s=[];for(const r of t)n.has(r.url)||(await e.delete(r),s.push(r.url));return{deletedURLs:s}}async o({url:e,event:t,plugins:n,integrity:s}){const r=new Request(e,{integrity:s,credentials:"same-origin"});let a,c=await f.fetch({event:t,plugins:n,request:r});for(const e of n||[])"cacheWillUpdate"in e&&(a=e);if(!(a?a.cacheWillUpdate({event:t,request:r,response:c}):c.status<400))throw new i("bad-precaching-response",{url:e,status:c.status});c.redirected&&(c=await async function(e){const t=e.clone(),n="body"in t?Promise.resolve(t.body):t.blob(),s=await n;return new Response(s,{headers:t.headers,status:t.status,statusText:t.statusText})}(c)),await h.put({event:t,plugins:n,request:r,response:c,cacheName:this.t,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.s}getCachedURLs(){return[...this.s.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.s.get(t.href)}createHandlerForURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new i("non-precached-url",{url:e});return async()=>{try{const e=await caches.open(this.t),n=await e.match(t);if(n)return n;throw new Error(`The cache ${this.t} did not have an entry `+`for ${t}.`)}catch(e){return fetch(t)}}}}let g;const y=()=>(g||(g=new p),g);const v=(e,t)=>{const n=y().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:r}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const a=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(i,t);if(yield a.href,n&&a.pathname.endsWith("/")){const e=new URL(a.href);e.pathname+=n,yield e.href}if(s){const e=new URL(a.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:i});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let m=!1;const R=e=>{m||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:r}={})=>{const i=n.getPrecacheName();addEventListener("fetch",n=>{const a=v(n.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:r});if(!a)return;let c=caches.open(i).then(e=>e.match(a)).then(e=>e||fetch(a));n.respondWith(c)})})(e),m=!0)},L=[],U={get:()=>L,add(e){L.push(...e)}},q=e=>{const t=y(),n=U.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},b=e=>{const t=y();e.waitUntil(t.activate())};var x,E;addEventListener("install",()=>self.skipWaiting()),addEventListener("activate",()=>self.clients.claim()),self.__precacheManifest=[{url:"0.worker.js",revision:"ecbcc01b8304ef0c3ae9463cd604a05c"},{url:"1.worker.js",revision:"ae181feacd9b7844a5883df3fa2ceadc"},{url:"2.worker.js",revision:"0160a95b046060f9b316c91b0b358dcc"},{url:"index.html",revision:"a74353d292ef9e8f69d0a1caea5ddf3e"},{url:"main.css",revision:"fbdea7593112b6e70b806a6057b992cd"},{url:"main.js",revision:"f0146d597355e6680b0edfe11246df40"}].concat(self.__precacheManifest||[]),x=self.__precacheManifest,E={},(e=>{y().addToCacheList(e),e.length>0&&(addEventListener("install",q),addEventListener("activate",b))})(x),R(E);
